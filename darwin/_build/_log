### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: types.mli.depends, tags: { extension:mli, file:types.mli, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamldep.opt -modules types.mli > types.mli.depends # cached
# Target: types.cmi, tags: { byte, compile, extension:mli, file:types.mli, interf, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamlc.opt -c -o types.cmi types.mli # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamlc.opt -c -o main.cmo main.ml # cached
# Target: types.ml.depends, tags: { extension:ml, file:types.ml, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamldep.opt -modules types.ml > types.ml.depends
# Target: types.cmx, tags: { compile, extension:cmx, extension:ml, file:types.cmx, file:types.ml, implem, native, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamlopt.opt -c -o types.cmx types.ml
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamlopt.opt -c -o main.cmx main.ml
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/home/commetud/GEI/OCaml/.opam/4.02.2/bin/ocamlopt.opt types.cmx main.cmx -o main.native
# Compilation successful.
